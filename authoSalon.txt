#include<iostream>
#include<string>
#include<vector>
#include<fstream>
#include<ctime>
#include<list>

using namespace std;

class Exception {
public:
	Exception(const string& massege = "Some error") :massege(massege) {

	}
	string massege;
	const string& what() {
		return massege;
	}

};

class WrongMaxSpeedException :public Exception {
public:
	WrongMaxSpeedException(const string& massege = "Bad max speed") :Exception(massege) {

	}
};
class WrongSpeedException :public Exception {
public:
	WrongSpeedException(const string& massege = "Bad speed") :Exception(massege) {

	}
};
class InvalidNumberException :public Exception {
public:
	InvalidNumberException(const string& massege = "Bad car number") :Exception(massege) {

	}
};
class Auto {
public:
	void checkNumber(const string& number) {
		if (number.size() > 8 || number.size() < 8) {
			throw InvalidNumberException("Number has mor or lass then 8 sumbols");
		}
		for (size_t i = 0; i < number.size(); i++)
		{
			if (!isalpha(number[i]) || !isalpha(number[number.size() - i - 1])) {
				throw InvalidNumberException("Invalid number");
			}

		}
		this->number = number;

	}
	void checkMaxSpeed(size_t mSpeed) {
		if (mSpeed > 360) {
			throw WrongMaxSpeedException("Wrong max speed");
		}
		this->maxSpeed = mSpeed;

	}
	void checkSpeed(size_t speed) {
		if (speed > maxSpeed) {
			throw WrongSpeedException("Wrong speed");
		}
		this->speed = speed;

	}
	const string& getNumber() {
		return number;
	}
	size_t getMaxSpeed() {
		return maxSpeed;
	}
	size_t getSpeed() {
		return speed;
	}
	void plus() {
		if (speed + 5 > maxSpeed) {
			throw WrongSpeedException("Wrong speed");
		}
		speed += 5;
	}
	void minus() {
		speed -= 5;
	}
private:
	string number;
	size_t maxSpeed;
	size_t speed;
};
int main() {
	Auto aut;
	try {
		aut.checkNumber("AM2345MH");
		cout << "Number->" << aut.getNumber() << endl;
	}
	catch (InvalidNumberException & ex) {
		cout << ex.what() << endl;
	}
	try {
		aut.checkMaxSpeed(360);
		cout << "Max speed->" << aut.getMaxSpeed() << endl;

	}
	catch (WrongMaxSpeedException & ex) {
		cout << ex.what() << endl;
	}
	try {
		aut.checkSpeed(56);
		//aut.plus();
		aut.minus();
		cout << "Speed->" << aut.getSpeed() << endl;
	}
	catch (WrongSpeedException & ex) {
		cout << ex.what() << endl;
	}

	system("pause");
	return 0;

}
/*
#include<iostream>
using namespace std;

class Auto {
private:
	int year, month, day, buy;
public:
	Auto() {
		year = 2000;
		month = 12;
		day = 31;
		buy = 3500;

		get();
		cout << endl;
	}

	Auto(int date_year, int date_month, int date_day, int date_buy) {
		year = date_year;
		month = date_month;
		day = date_day;
		buy = date_buy;

		get();
		cout << endl;
	}

	void message() {
		cout << "Class is working!" << endl;
	}

	void set(int date_year, int date_month, int date_day, int date_buy) {
		year = date_year;
		month = date_month;
		day = date_day;
		buy = date_buy;
	}

	void get() {
		cout << "Year of this auto is - " << year << ", month is - " << month << ", day is - " << day << " (price:" << buy << "$)" << endl;
	}

	~Auto() {
		cout << "Class is not working" << endl;
	}
};

int main(int argc, const char* argv[]) {

	Auto shkoda(2015, 2, 13,5000);
	shkoda.message();
	shkoda.set(2005, 11, 23,13460);
	shkoda.get();

	Auto bmw;
	bmw.set(2012, 1, 11,2450);
	bmw.get();

	cin.get();
	return 0;
}
*/